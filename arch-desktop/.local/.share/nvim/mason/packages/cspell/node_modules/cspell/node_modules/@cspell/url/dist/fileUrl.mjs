import { fileURLToPath } from 'node:url';
import { hasProtocol } from './url.mjs';
/**
 * @param url - URL or string to check if it is a file URL.
 * @returns true if the URL is a file URL.
 */
export function isFileURL(url) {
    return hasProtocol(url, 'file:');
}
/**
 * Convert a URL into a string. If it is a file URL, convert it to a path.
 * @param url - URL
 * @returns path or href
 */
export function toFilePathOrHref(url) {
    return isFileURL(url) ? toFilePath(url) : url.toString();
}
function toFilePath(url) {
    return pathWindowsDriveLetterToUpper(fileURLToPath(url));
}
export const regExpWindowsPathDriveLetter = /^([a-zA-Z]):[\\/]/;
export function pathWindowsDriveLetterToUpper(absoluteFilePath) {
    return absoluteFilePath.replace(regExpWindowsPathDriveLetter, (s) => s.toUpperCase());
}
//# sourceMappingURL=fileUrl.mjs.map